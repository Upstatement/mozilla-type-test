<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Oslash" format="1">
  <advance width="698.12069"/>
  <unicode hex="00D8"/>
  <note>
Oslash
</note>
  <outline>
    <contour>
      <point x="350" y="-10" type="curve" smooth="yes"/>
      <point x="546" y="-10"/>
      <point x="657" y="108"/>
      <point x="657" y="345" type="curve" smooth="yes"/>
      <point x="657" y="582"/>
      <point x="546" y="700"/>
      <point x="350" y="700" type="curve" smooth="yes"/>
      <point x="152" y="700"/>
      <point x="42" y="582"/>
      <point x="42" y="345" type="curve" smooth="yes"/>
      <point x="42" y="108"/>
      <point x="152" y="-10"/>
    </contour>
    <contour>
      <point x="350" y="103" type="curve" smooth="yes"/>
      <point x="243" y="103"/>
      <point x="196" y="160"/>
      <point x="196" y="285" type="curve" smooth="yes"/>
      <point x="196" y="405" type="line" smooth="yes"/>
      <point x="196" y="530"/>
      <point x="243" y="587"/>
      <point x="350" y="587" type="curve" smooth="yes"/>
      <point x="456" y="587"/>
      <point x="503" y="530"/>
      <point x="503" y="405" type="curve" smooth="yes"/>
      <point x="503" y="285" type="line" smooth="yes"/>
      <point x="503" y="160"/>
      <point x="456" y="103"/>
    </contour>
    <contour>
      <point x="44" y="-10" type="line"/>
      <point x="147" y="-10" type="line"/>
      <point x="205" y="70" type="line"/>
      <point x="213" y="70" type="line"/>
      <point x="554" y="571" type="line"/>
      <point x="562" y="571" type="line"/>
      <point x="655" y="700" type="line"/>
      <point x="551" y="700" type="line"/>
      <point x="494" y="622" type="line"/>
      <point x="487" y="622" type="line"/>
      <point x="146" y="120" type="line"/>
      <point x="138" y="120" type="line"/>
    </contour>
    <contour>
      <point x="350" y="690" type="move" name="top"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>NPUSHB[ ]	/* 118 values pushed */
2 3 0 11 10 13 12 18 15 26 5 28 17 3 25 13 31 18 31 26 21 28 85 2 84 4 90 8 89 13 89 17 91 19 80 23 85 28 121 42 20 11 9 3 24 6 27 31 10 31 11 17 24 22 27 38 9 39 47 117 3 127 9 127 10 127 11 127 12 121 18 112 24 112 25 112 26 112 27 19 6 2 42 47 30 46 4 50 33 52 12 9 24 27 4 6 21 2 50 52 6 10 42 47 30 46 4 39 43 21 0 12 9 24 27 4 15 0 
PUSHW[ ]	/* 1 value pushed */
-4 
PUSHB[ ]	/* 5 values pushed */
11 11 2 85 0 
PUSHW[ ]	/* 1 value pushed */
-26 
PUSHB[ ]	/* 5 values pushed */
9 9 2 85 0 
PUSHW[ ]	/* 1 value pushed */
-30 
PUSHB[ ]	/* 5 values pushed */
12 12 2 85 0 
PUSHW[ ]	/* 1 value pushed */
-16 
NPUSHB[ ]	/* 40 values pushed */
13 13 2 85 0 115 57 15 57 1 15 57 31 57 63 57 3 39 21 15 18 11 11 2 85 15 22 9 9 2 85 15 6 12 12 2 85 15 104 56 
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP1[ ]	/* DeltaExceptionP1 */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SRP1[ ]	/* SetRefPoint1 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
MIRP[11101]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
NPUSHB[ ]	/* 9 values pushed */
6 10 15 26 22 26 3 26 10 
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */</string>
      <key>com.schriftgestaltung.Glyphs.lastChange</key>
      <string>2025-02-11 14:17:34 +0000</string>
      <key>public.markColor</key>
      <string>0.67,0.95,0.38,1</string>
    </dict>
  </lib>
</glyph>
